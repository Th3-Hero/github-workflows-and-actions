name: Semantic release
description: Release a project using the Semantic Release tool

inputs:
  additional-plugins:
    description: 'Additional Semantic Release plugins to install'
    required: false
  github-token:
    description: 'Token for authenticating to GitHub'
    required: true
  release-config:
    description: 'Sharable Semantic Release configuration to use. If not provided, it is assumed a valid release config is defined locally'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Generate releaserc
      if: ${{ inputs.release-config != '' }}
      shell: bash
      run: |
        cat <<EOF > .releaserc.json
        {
          "extends": "${{ inputs.release-config }}"
        }
        EOF
    - name: Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GIT_AUTHOR_NAME: th3-hero-releaser
        GIT_AUTHOR_EMAIL: th3-hero-releaser@users.noreply.github.com
        GIT_COMMITTER_NAME: th3-hero-releaser
        GIT_COMMITTER_EMAIL: th3-hero-releaser@users.noreply.github.com
      run: |
        git config --global user.name $GIT_AUTHOR_NAME
        git config --global user.email $GIT_AUTHOR_EMAIL

        npm install --no-save semantic-release ${{ inputs.release-config }} ${{ inputs.additional-plugins }}
        VERSION_DETAILS=$(npx --no semantic-release)
        echo "$VERSION_DETAILS"

        # Extract the next version from the output
        NEXT_VERSION=$(echo "$VERSION_DETAILS" | grep -oE 'The next release version is [0-9]+\.[0-9]+\.[0-9]+' | awk '{print $6}')
        # If next release version is not found, set it to empty
        NEXT_VERSION=${NEXT_VERSION:-''}

        # If next release isn't blank, update the pom files and commit the changes
        if [ -n "$NEXT_VERSION" ]; then
          echo -n "Updating pom files to version $NEXT_VERSION"
          mvn -B versions:set -DprocessAllModules -DgenerateBackupPoms=false -DnewVersion="$NEXT_VERSION"
          
          echo -n "Releasing version $NEXT_VERSION"
          git add pom.xml && git add "**/pom.xml"
          git commit -m "chore: release $NEXT_VERSION [skip ci]"
          git push
        fi
